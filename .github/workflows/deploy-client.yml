# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "main"
# branch.

name: 'Build and Deploy to Cloud Run'

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'apps/client/**'

env:
  PROJECT_ID: 'my-portfolio-prod-473214'
  REGION: 'us-east1'
  SERVICE: 'my-portfolio-app'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/453047639463/locations/global/workloadIdentityPools/github-actions-pool/providers/gh-provider-2025'
  SERVICE_ACCOUNT: 'github-actions-deployer@my-portfolio-prod-473214.iam.gserviceaccount.com'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ env.SERVICE_ACCOUNT }}'

      - name: Check active account and project
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth list
          gcloud config list

      # BEGIN - Docker auth and build
      - name: 'Configure Docker for Artifact Registry'
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --project ${{ env.PROJECT_ID }} --quiet

#      - name: Check GCP authentication
#        run: |
#          gcloud auth list
#          gcloud config list
#          gcloud artifacts repositories describe my-portfolio-app --location=us-east1 --project=my-portfolio-prod-473214

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build -f apps/client/Dockerfile --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
      # END - Docker auth and build

      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/app:${{ github.sha }}'
          
      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |2-
                echo ${{ steps.deploy.outputs.url }}
